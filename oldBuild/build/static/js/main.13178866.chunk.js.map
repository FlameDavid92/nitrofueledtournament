{"version":3,"sources":["Components/InitForm.js","utils.js","Components/MyImgs.js","Components/InitForm2.js","Components/PointsManager.js","Components/MyModal.js","Components/MyModal2.js","Components/GameHelps.js","Components/MyTournament.js","Components/AudioPlayer.js","App.js","index.js"],"names":["InitForm","setNumGioc","setTipo","setInitForm","className","onSubmit","e","preventDefault","parseInt","target","numGioc","value","tipo","htmlFor","name","id","defaultValue","required","disabled","hidden","type","Player","favoriteTrack","battlePoints","trackPoints","this","btPoints","tkPoints","getRandomInt","min","max","Math","ceil","floor","random","MyImgs","favoriteTracksImgs","useEffect","forEach","picture","Image","src","fileName","map","i","key","InitForm2","tracks","setPlayers","setInitForm2","useState","Array","fill","favoriteTracks","setFavoriteTracks","tempPlayers","tempFavs","pl","nickName","split","length","substr","plus","toUpperCase","charAt","placeholder","onChange","index","changeFavorite","tr","some","fvTr","fvInd","Fragment","idTrack","PointsManager","end","players","currentGameId","setCurrentGameId","myTournament","setMyTournament","endGame","setEndGame","openModalTempoPoints","tempWinners","tempPts","Number","POSITIVE_INFINITY","plTot","getTotalPoints","push","winners","w","util","el","temp","state","points","addBattlePoints","addTrackPoints","reset","onClick","MyModal","clicksModal","text","title","divModale","document","getElementById","opened","setOpened","createPortal","MyModal2","clicksModal2","pointsChangeId","closeModal","console","log","prevPoints","newPoints","slice","GameHelps","names","switchTracks","setSwitchTracks","arrayRiavviaSwitch","setArrayRiavviaSwitch","textModal","setTextModal","setClicksModal","tipoBig","tipoMedium","tipoSmall","arrayNumGioc","riavvia","switch","prev","superRiavvia","decrementRiavvia","transformSwitch","tempSw","intTrack","choice","splice","tempTourn","num","alert","decrementSwitch","MyTournament","battles","setPointsChangeId","numPref","setClicksModal2","tempBattles","shift","tempTracks","randomPref","player","array","j","shuffle","addBattle","intBattle","addTrack","addPref","pref","pop","p","indp","modificaPunteggi","icon","faPencilAlt","txt","AudioPlayer","autoPlay","loop","App","initForm","initForm2","audio","setAudio","prevAudio","nitroFueled","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.13178866.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function InitForm({setNumGioc,setTipo,setInitForm}) {\r\n    const inizializzaTorneo = (e) => {\r\n        e.preventDefault();\r\n        setNumGioc(parseInt(e.target.numGioc.value));\r\n        setTipo(e.target.tipo.value);\r\n        setInitForm(false);\r\n        return;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <form onSubmit={inizializzaTorneo}>\r\n                        <div className=\"form-row text-center\">\r\n                            <div className=\"form-group col-12\">\r\n                                <label htmlFor=\"inputState1\">Tipologia torneo:</label>\r\n                                <select name=\"tipo\" id=\"inputState1\" className=\"form-control form-control-sm text-center\" defaultValue=\"\" required>\r\n                                    <option disabled hidden value=\"\">Scegli il tipo di torneo</option>\r\n                                    <option value=\"small\">Small</option>\r\n                                    <option value=\"medium\">Medium</option>\r\n                                    <option value=\"big\">Big</option>\r\n                                </select>\r\n                                <div className=\"mt-2\">\r\n                                    <label htmlFor=\"inputState2\">Numero giocatori:</label>\r\n                                    <select name=\"numGioc\" id=\"inputState2\" className=\"form-control form-control-sm text-center\" defaultValue=\"\" required>\r\n                                        <option disabled hidden value=\"\">Scegli il numero di giocatori</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input className=\"btn btn-outline-primary mt-2\" type=\"submit\" value=\"Avanti\" />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","export class Player {\r\n    constructor(name, favoriteTrack, battlePoints, trackPoints) {\r\n        this.name = name;\r\n        this.favoriteTrack = favoriteTrack; //{id:...,name:...}\r\n        this.battlePoints = battlePoints;\r\n        this.trackPoints = trackPoints;\r\n    }\r\n    addBattlePoints(btPoints) {\r\n        this.battlePoints += btPoints;\r\n    }\r\n    addTrackPoints(tkPoints) {\r\n        this.trackPoints += tkPoints;\r\n    }\r\n    getTotalPoints() {\r\n        return this.battlePoints + this.trackPoints;\r\n    }\r\n}\r\nexport function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //Il max è escluso e il min è incluso\r\n}\r\n\r\nexport function shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n}\r\n\r\nexport function getWinner(players){\r\n    let tempWinners = [];\r\n    let tempPts = Number.POSITIVE_INFINITY;\r\n    players.forEach(pl => {\r\n        let plTot = pl.getTotalPoints();\r\n        if (plTot < tempPts) {\r\n            tempPts = pl.getTotalPoints();\r\n            tempWinners = [pl.name];\r\n        } else if (plTot === tempPts) {\r\n            tempWinners.push(pl.name);\r\n        }\r\n    });\r\n    if (tempWinners.length > 1) {\r\n        let winners = \"\";\r\n        tempWinners.forEach(w => winners += (w + \" \"));\r\n        return \"Torneo concluso in parità, i vincitori sono: ;\" + winners;\r\n    } else {\r\n        return \"Vince il torneo: ;\" + tempWinners[0];\r\n    }\r\n};\r\nexport function getBtWinner(players){\r\n    let tempWinners = [];\r\n    let tempPts = Number.POSITIVE_INFINITY;\r\n    players.forEach(pl => {\r\n        let plTot = pl.battlePoints;\r\n        if (plTot < tempPts) {\r\n            tempPts = pl.battlePoints;\r\n            tempWinners = [pl.name];\r\n        } else if (plTot === tempPts) {\r\n            tempWinners.push(pl.name);\r\n        }\r\n    });\r\n    if (tempWinners.length > 1) {\r\n        let winners = \"\";\r\n        tempWinners.forEach(w => winners += (w + \" \"));\r\n        return \"Premio battaglia in parità, i vincitori sono: ;\" + winners;\r\n    } else {\r\n        return \"Vince il premio battaglia: ;\" + tempWinners[0];\r\n    }\r\n};\r\nexport function getTrWinner(players){\r\n    let tempWinners = [];\r\n    let tempPts = Number.POSITIVE_INFINITY;\r\n    players.forEach(pl => {\r\n        let plTot = pl.trackPoints;\r\n        if (plTot < tempPts) {\r\n            tempPts = pl.trackPoints;\r\n            tempWinners = [pl.name];\r\n        } else if (plTot === tempPts) {\r\n            tempWinners.push(pl.name);\r\n        }\r\n    });\r\n    if (tempWinners.length > 1) {\r\n        let winners = \"\";\r\n        tempWinners.forEach(w => winners += (w + \" \"));\r\n        return \"Premio gara in parità, i vincitori sono: ;\" + winners;\r\n    } else {\r\n        return \"Vince il premio gara: ;\" + tempWinners[0];\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport './myimgs.css';\r\n\r\nexport default function MyImgs({ favoriteTracksImgs }) {\r\n    useEffect(() => {\r\n        favoriteTracksImgs.forEach((picture) => {\r\n            const img = new Image();\r\n            img.src = picture.fileName;\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"preftracks mb-2\">\r\n            <div className=\"row m-0 justify-content-center\">\r\n                {favoriteTracksImgs.map((src, i) => {\r\n                    return (\r\n                        <div key={i} className=\"col-6 w-100 h-100 p-2\">\r\n                            <img className={\"img-fluid trackimg \"+((i==0)?'b-blue':((i==1)?'b-red':((i==2)?'b-green':'b-purple')))} src={src} />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Player } from '../utils';\r\nimport MyImgs from './MyImgs';\r\n\r\nexport default function InitForm2({ tracks, numGioc, setPlayers, setInitForm2 }) {\r\n    const [favoriteTracks, setFavoriteTracks] = useState(Array(numGioc).fill(0));\r\n    const setNomiPref = (e) => {\r\n        e.preventDefault();\r\n        const tempPlayers = Array(numGioc).fill(null);\r\n        const tempFavs = Array(numGioc).fill(null);\r\n        tempPlayers.forEach((pl, i) => {\r\n            const nickName = (e.target[i * 2].value).split(' ');\r\n            const name = (nickName[0].length > 10) ? nickName[0].substr(0, 10) : nickName[0];\r\n            const plus = (nickName[1]) ? nickName[1].toUpperCase().charAt(0) : '';\r\n            tempPlayers[i] = new Player(name + plus, tracks[e.target[(i * 2) + 1].value], 0, 0, 0);\r\n        });\r\n        setPlayers(tempPlayers);\r\n        setFavoriteTracks(tempFavs);\r\n        setInitForm2(false);\r\n    }\r\n\r\n    const changeFavorite = (e, index) => {\r\n        favoriteTracks[index] = parseInt(e.target.value);\r\n        setFavoriteTracks([...favoriteTracks]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center align-items-center m-0\">\r\n            <div className=\"col-12 col-md-4\">\r\n                <div className=\"row justify-content-center m-0\">\r\n                    <div className=\"col-12\">\r\n                        <form onSubmit={setNomiPref}>\r\n                            <div className=\"form-row text-center\">\r\n                                <div className=\"form-group col-12 mb-1\">\r\n                                    {Array(numGioc).fill(null).map((pl, i) => {\r\n                                        return (\r\n                                            <div key={\"input-\" + (i + 1)} className=\"mt-2\">\r\n                                                <input className=\"form-control form-control-sm mb-1\" type=\"text\" placeholder={\"Nome giocatore \" + (i + 1)} required></input>\r\n                                                <select name={\"inputStatePlayer-\" + (i + 1)} id={\"inputStatePlayer-\" + (i + 1)}\r\n                                                    onChange={(e) => changeFavorite(e, i)} className=\"form-control form-control-sm text-center\"\r\n                                                    defaultValue=\"\" required>\r\n                                                    <option disabled hidden value=\"\">{\"Gara preferita del giocatore \" + (i + 1)}</option>\r\n                                                    {tracks.map(tr => {\r\n                                                        if (tr.id === 0 || favoriteTracks.some((fvTr, fvInd) => (tr.id === fvTr && fvInd !== i))) return <React.Fragment key={\"j-\" + tr.id}></React.Fragment>;\r\n                                                        else return (<option key={\"j-\" + tr.id} value={tr.id}>{tr.id}. {tr.name}</option>)\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>)\r\n                                    }\r\n                                    )}\r\n                                    <input className=\"btn btn-outline-primary mt-1\" type=\"submit\" value=\"Avanti\" />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <MyImgs favoriteTracksImgs={favoriteTracks.map(idTrack => tracks[idTrack].src)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport * as util from '../utils.js';\r\nimport './pointsmanager.css';\r\n\r\nexport default function PointsManager({ end, players, setPlayers, currentGameId, setCurrentGameId, myTournament, setMyTournament, endGame, setEndGame, openModalTempoPoints }) {\r\n    const inserisciPunti = (e) => {\r\n        e.preventDefault();\r\n        let tempPlayers = [...players];\r\n        let temp = myTournament.map((pl, i) => {\r\n            return (parseInt(pl.index) == (parseInt(currentGameId) + 1)) ? { ...myTournament[currentGameId], state: \"complete\", points: tempPlayers.map((pl, i) => (parseInt(e.target[i].value))) } : pl\r\n        });\r\n        setMyTournament(temp);\r\n\r\n        tempPlayers.forEach((pl, i) => {\r\n            if (myTournament[currentGameId].type === 'battle') {\r\n                pl.addBattlePoints(parseInt(e.target[i].value));\r\n            } else {\r\n                pl.addTrackPoints(parseInt(e.target[i].value));\r\n            }\r\n        });\r\n\r\n        setPlayers(tempPlayers);\r\n        if (currentGameId === (end - 1)) {\r\n            setEndGame(true);\r\n        }\r\n        setCurrentGameId(currentGameId + 1);\r\n        e.target.reset();\r\n    }\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-12\">\r\n                {!endGame ? (\r\n                    <>\r\n                        <form onSubmit={inserisciPunti}>\r\n                            <div className=\"form-row text-center\">\r\n                                <div className=\"form-group col-12 mb-0\">\r\n                                    {\r\n                                        players.map((pl, i) => {\r\n                                            return (\r\n                                                <div key={\"pt-pl-\" + i}>\r\n                                                    <label htmlFor={\"pt-pl-\" + i}>{pl.name}:</label>\r\n                                                    <select name=\"tipo\" id={\"pt-pl-\" + i} className=\"form-control text-center\" defaultValue=\"\" required>\r\n                                                        <option disabled hidden value=\"\">---Posizione---</option>\r\n                                                        {[1, 2, 3, 4, 5, 6, 7, 8].map((el, i) => <option key={\"opt-\" + i} value={el}>{el}&#x2090;</option>)}\r\n                                                    </select>\r\n                                                </div>)\r\n                                        })\r\n                                    }\r\n                                    <input className={\"btn mt-2 \" + ((currentGameId === (end - 1)) ? \"btn-outline-danger\" : \"btn-outline-primary\")} type=\"submit\" value={(currentGameId === (end - 1)) ? \"Concludi partita\" : \"Inserisci punti\"} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </>\r\n                ) : <>\r\n                        {\r\n                            util.getWinner(players).split(';').map((el, i) => <p key={'w' + i} className={\"text-sm-left mb-2 mycolorwinner \" + ((i == 1) && 'font-weight-bold')}>{el}</p>)\r\n                        }\r\n                        {\r\n                            util.getBtWinner(players).split(';').map((el, i) => <p key={'wb' + i} className={\"text-sm-left mb-2 mycolorwinnerbt \" + ((i == 1) && 'font-weight-bold')}>{el}</p>)\r\n                        }\r\n                        {\r\n                            util.getTrWinner(players).split(';').map((el, i) => <p key={'wt' + i} className={\"text-sm-left mb-2 mycolorwinnertr \" + ((i == 1) && 'font-weight-bold')}>{el}</p>)\r\n                        }\r\n                    </>\r\n                }\r\n                <button onClick={openModalTempoPoints} className={\"btn mt-5 w-100 \" + ((end === currentGameId) ? \"btn-outline-success\" : \"btn-outline-primary\")}>{(end === currentGameId) ? \"Punteggi finali\" : \"Punteggi parziali\"}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './mymodal.css';\r\n\r\nexport default function MyModal({clicksModal, text, title }) {\r\n    const divModale = document.getElementById('divModale');\r\n    const [opened, setOpened] = useState(false);\r\n    const closeModal = () => {\r\n        setOpened(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        clicksModal && setOpened(true);\r\n    }, [clicksModal]);\r\n\r\n    return createPortal(\r\n        <>\r\n            {opened && (\r\n                <div className=\"containermodale\">\r\n                    <div className=\"shadow modale\">\r\n                            <div className=\"row justify-content-between m-0 p-1\">\r\n                                <div className=\"h3 text-uppercase\">{title}</div>\r\n                                <button onClick={closeModal} className=\"btn btn-sm btn-danger rounded p-1 h-50\">X</button>\r\n                            </div>\r\n                            <hr className=\"separator m-0\"></hr>\r\n                            <div className=\"row modal-children w-100 m-0\">\r\n                                { text.split(';').map(i => <div key={'t'+i} className=\"col-12\"><span>{i}</span></div>) }\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            )}\r\n        </>, divModale\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './mymodal.css';\r\n\r\nexport default function MyModal2({ clicksModal2, title, players, setPlayers, myTournament, setMyTournament, pointsChangeId}) {\r\n    const divModale = document.getElementById('divModale');\r\n    const [opened, setOpened] = useState(false);\r\n\r\n    const closeModal = () => {\r\n        setOpened(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        clicksModal2 && setOpened(true);\r\n    }, [clicksModal2]);\r\n\r\n    const cambiaPunti = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"gameToChange\", myTournament[pointsChangeId]);\r\n        \r\n        console.log(\"myTournament before:\",myTournament);\r\n        let prevPoints = myTournament[pointsChangeId].points;\r\n        let newPoints = players.map((pl, i) => parseInt(e.target[i].value));\r\n        console.log(\"newPoints\",newPoints);\r\n        setMyTournament([\r\n            ...myTournament.slice(0, pointsChangeId),\r\n            {...myTournament[pointsChangeId], points: newPoints, state: \"complete\"},\r\n            ...myTournament.slice(pointsChangeId+1)\r\n        ]);\r\n        console.log(\"myTournament after:\",myTournament);\r\n        \r\n\r\n        let tempPlayers = [...players];\r\n        console.log(\"templPlayers before:\",tempPlayers);\r\n        tempPlayers.forEach((pl, i) => {\r\n            if (myTournament[pointsChangeId].type == 'battle') {\r\n                pl.battlePoints = (pl.battlePoints - prevPoints[i]) + newPoints[i];\r\n            }else if (myTournament[pointsChangeId].type == 'track' || myTournament[pointsChangeId].type == 'favorite') {\r\n                pl.trackPoints = (pl.trackPoints - prevPoints[i]) + newPoints[i];\r\n            }\r\n        })\r\n        setPlayers(tempPlayers);\r\n        console.log(\"templPlayers after:\",tempPlayers);\r\n\r\n        closeModal();\r\n    }\r\n\r\n    return createPortal(\r\n        <>\r\n            {opened && (\r\n                <div className=\"containermodale\">\r\n                    <div className=\"shadow modale\">\r\n                        <div className=\"row justify-content-between m-0 p-1\">\r\n                            <div className=\"h3 text-uppercase\">{title}</div>\r\n                            <button onClick={closeModal} className=\"btn btn-sm btn-danger rounded p-1 h-50\">X</button>\r\n                        </div>\r\n                        <hr className=\"separator m-0\"></hr>\r\n                        <div className=\"form-row justify-content-center w-100 m-0\">\r\n                            <div className=\"h6 text-uppercase\">{`${myTournament[pointsChangeId].index}. ${myTournament[pointsChangeId].name} - ${((myTournament[pointsChangeId].type === 'battle') ? 'BATTAGLIA' : ((myTournament[pointsChangeId].type === 'favorite') ? 'PREFERITA' : 'GARA'))}`}</div>\r\n                            <div className=\"col-12\">\r\n                                <form onSubmit={cambiaPunti}>\r\n                                    <div className=\"form-group\">\r\n                                        {players.map((pl, i) => {\r\n                                            return (\r\n                                                <div key={\"modal2-pt-pl-\" + i}>\r\n                                                    <label className=\"mb-1\" htmlFor={\"modal2-pt-pl-\" + i}>{pl.name}:</label>\r\n                                                    <select name=\"tipo\" id={\"modal2-pt-pl-\" + i} className=\"form-control text-center mb-2\" defaultValue=\"\" required>\r\n                                                        <option disabled hidden value=\"\">---Posizione---</option>\r\n                                                        {[1, 2, 3, 4, 5, 6, 7, 8].map((el, i) => <option key={\"modal2-opt-\" + i} value={el}>{el}&#x2090;</option>)}\r\n                                                    </select>\r\n                                                </div>)\r\n                                        })}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input className=\"form-control btn btn-outline-primary mt-2\" type=\"submit\" value=\"Inserisci punti\" />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>, divModale\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MyModal from './MyModal.js';\r\nimport { getRandomInt } from '../utils';\r\n\r\nexport default function GameHelps({ names, numGioc, tipo, myTournament, setMyTournament, switchTracks, setSwitchTracks, currentGameId }) {\r\n    const [arrayRiavviaSwitch, setArrayRiavviaSwitch] = useState(null);\r\n    const [textModal, setTextModal] = useState(\"\");\r\n    const [clicksModal, setClicksModal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        /*Scelta del numero di riavvia e switch per ogni tipo di torneo*/\r\n        const tipoBig = { 'riavvia': 2, 'switch': 2 };\r\n        const tipoMedium = { 'riavvia': 2, 'switch': 1 };\r\n        const tipoSmall = { 'riavvia': 1, 'switch': 1 };\r\n        const arrayNumGioc = [];\r\n        names.forEach(() => {\r\n            arrayNumGioc.push({\r\n                riavvia: ((tipo === 'small') ? tipoSmall.riavvia :\r\n                    ((tipo === 'medium') ? tipoMedium.riavvia : tipoBig.riavvia)),\r\n                switch: ((tipo === 'small') ? tipoSmall.switch :\r\n                    ((tipo === 'medium') ? tipoMedium.switch : tipoBig.switch))\r\n            })\r\n        });\r\n        setArrayRiavviaSwitch(arrayNumGioc);\r\n    }, []);\r\n\r\n    const decrementSwitch = (i) => {\r\n        //Switch solo se type è track\r\n        if (switchTracks.length > 0) {\r\n            if (myTournament[currentGameId].type === 'track') {\r\n                const tempSw = [...switchTracks];\r\n                let intTrack = getRandomInt(0, tempSw.length);\r\n                let choice = tempSw[intTrack];\r\n                tempSw.splice(intTrack, 1);\r\n                setSwitchTracks(tempSw);\r\n\r\n                const tempTourn = [...myTournament];\r\n                tempTourn[currentGameId] =\r\n                    { index: (currentGameId + 1), num: choice.id, name: choice.name, type: 'track', state: 'uncomplete', points: Array(numGioc).fill(null) };\r\n                setMyTournament(tempTourn);\r\n\r\n                if (arrayRiavviaSwitch[i].switch > 0) {\r\n                    const temp = [...arrayRiavviaSwitch];\r\n                    temp[i].switch -= 1;\r\n                    setArrayRiavviaSwitch(temp);\r\n                }\r\n            } else {\r\n                setClicksModal((prev)=>prev+1);\r\n                setTextModal(\"Non è possibile effettuare Switch su una battaglia o su una gara preferita.\");\r\n                //alert(\"Non è possibile effettuare Switch su una battaglia o su una gara preferita.\")\r\n            }\r\n        } else {\r\n            //Per i tipi di torneo previsti finora questo non può accadere.\r\n            alert(\"Errore durante lo switch, non è possibile effettuare lo switch\");\r\n        }\r\n\r\n    }\r\n    const transformSwitch = (i) => {\r\n        if (arrayRiavviaSwitch[i].switch > 0) {\r\n            const temp = [...arrayRiavviaSwitch];\r\n            temp[i].switch -= 1;\r\n            temp[i].riavvia += 2;\r\n            setArrayRiavviaSwitch(temp);\r\n        }\r\n    }\r\n    const decrementRiavvia = (i) => {\r\n        if (myTournament[currentGameId].type === 'track' || myTournament[currentGameId].type === 'favorite') {\r\n            if (arrayRiavviaSwitch[i].riavvia > 0) {\r\n                const temp = [...arrayRiavviaSwitch];\r\n                temp[i].riavvia -= 1;\r\n                setArrayRiavviaSwitch(temp);\r\n            }\r\n        } else {\r\n            setClicksModal((prev)=>prev+1);\r\n            setTextModal(\"Non è possibile effettuare Riavvia su una battaglia.\");\r\n            //alert(\"Non è possibile effettuare Riavvia su una battaglia.\")\r\n        }\r\n    }\r\n\r\n    const superRiavvia = (i) => {\r\n        if (myTournament[currentGameId].type === 'track' || myTournament[currentGameId].type === 'favorite') {\r\n            if (arrayRiavviaSwitch[i].riavvia > 0) {\r\n                const temp = [...arrayRiavviaSwitch];\r\n                temp[i].riavvia -= 2;\r\n                setArrayRiavviaSwitch(temp);\r\n            }\r\n        } else {\r\n            setClicksModal((prev)=>prev+1);\r\n            setTextModal(\"Non è possibile effettuare SuperRiavvia su una battaglia.\");\r\n            //alert(\"Non è possibile effettuare SuperRiavvia su una battaglia.\")\r\n        }\r\n    }\r\n    return (<>\r\n        <div className=\"row\">\r\n            {arrayRiavviaSwitch && arrayRiavviaSwitch.map((pl, i) => {\r\n                return (\r\n                    <div key={'gHelp-' + i} className={\"col-6 col-md-\" + ((numGioc === 2) ? \"6\" : ((numGioc === 3) ? \"4\" : \"3\"))}>\r\n                        <div key={'player-' + i} className=\"row\">\r\n                            <div className=\"col-12 h4 m-0\">{names[i]}</div>\r\n                            <div className=\"col-12 col-md-3\">Riavvia: {pl.riavvia} - Switch: {pl.switch}</div>\r\n                            <div className=\"col-12 col-md-9 mb-2\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 p-1 mb-1\">\r\n                                        <button className=\"btn btn-sm btn-primary w-100 p-0\" onClick={() => superRiavvia(i)} disabled={(pl.riavvia - 2) < 0}>SuperRiavvia</button>\r\n                                        <button className=\"btn btn-sm btn-primary w-100 p-0\" onClick={() => decrementRiavvia(i)} disabled={pl.riavvia === 0}>Riavvia</button>\r\n                                    </div>\r\n                                    <div className=\"col-6 p-1 mb-1\">\r\n                                        <button className=\"btn btn-sm btn-primary w-100 p-0\" onClick={() => transformSwitch(i)} disabled={pl.switch === 0}>{\"1S => 2R\"}</button>\r\n                                        <button className=\"btn btn-sm btn-primary w-100 p-0\" onClick={() => decrementSwitch(i)} disabled={pl.switch === 0}>Switch</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n        <MyModal clicksModal={clicksModal} text={textModal} title=\"ATTENZIONE\"></MyModal>\r\n    </>)\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport PointsManager from './PointsManager';\r\nimport MyModal from './MyModal.js';\r\nimport MyModal2 from './MyModal2.js';\r\nimport GameHelps from './GameHelps';\r\nimport { getRandomInt, shuffle } from '../utils';\r\nimport './mytournament.css';\r\n\r\nexport default function MyTournament({ tipo, numGioc, battles, tracks, players, setPlayers }) {\r\n    const [currentGameId, setCurrentGameId] = useState(0);\r\n    const [myTournament, setMyTournament] = useState(null);\r\n    const [switchTracks, setSwitchTracks] = useState([]);\r\n    const [pointsChangeId, setPointsChangeId] = useState(0);\r\n    const [endGame, setEndGame] = useState(false);\r\n\r\n    const numPref = numGioc;\r\n    const numBattles = (tipo === 'small') ? 2 : ((tipo === 'medium') ? 3 : 4);\r\n    const numTracks = (tipo === 'small') ? 3 : ((tipo === 'medium') ? 6 : 9);\r\n    const end = numPref + numBattles + numTracks;\r\n\r\n    const [clicksModal, setClicksModal] = useState(0);\r\n    const [clicksModal2, setClicksModal2] = useState(0);\r\n    const [textModal, setTextModal] = useState(\"\");\r\n\r\n    const modificaPunteggi = (i) => {\r\n        setPointsChangeId(i);\r\n        setClicksModal2((prev) => prev + 1);\r\n    }\r\n\r\n    const openModalTempoPoints = () => {\r\n        let txt = \"\";\r\n        players.forEach(pl => {\r\n            txt += pl.name + \"= tot:\" + pl.getTotalPoints() + \" battaglie:\" + pl.battlePoints + \" gare:\" + pl.trackPoints + \";\";\r\n        });\r\n        setTextModal(txt);\r\n        setClicksModal((prev) => prev + 1);\r\n\r\n        /*\r\n        txt += util.getWinner(players) + \";\";\r\n            txt += util.getBtWinner(players) + \";\";\r\n            txt += util.getTrWinner(players) + \";\";\r\n        */\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tempBattles = [...battles];\r\n        tempBattles.shift();\r\n        let tempTracks = [...tracks];\r\n        tempTracks.shift();\r\n        let randomPref = players.map(pl => { return { num: pl.favoriteTrack.id, name: pl.favoriteTrack.name, player: pl.name } });\r\n        shuffle(randomPref);\r\n\r\n        const addBattle = (battles, i) => {\r\n            let intBattle = getRandomInt(0, battles.length);\r\n            let choice = battles[intBattle];\r\n            battles.splice(intBattle, 1);\r\n            return { index: i + 1, num: choice.id, name: choice.name, type: 'battle', state: 'uncomplete', points: Array(numGioc).fill(null) };\r\n        }\r\n\r\n        const addTrack = (tracks, i) => {\r\n            let intTrack = getRandomInt(0, tracks.length);\r\n            let choice = tracks[intTrack];\r\n            tracks.splice(intTrack, 1);\r\n            return { index: i + 1, num: choice.id, name: choice.name, type: 'track', state: 'uncomplete', points: Array(numGioc).fill(null) };\r\n        }\r\n\r\n        const addPref = (randomPref, i) => {\r\n            const pref = randomPref.pop();\r\n            return { index: i + 1, num: pref.num, name: pref.name + \" [\" + pref.player + \"]\", type: 'favorite', state: 'uncomplete', points: Array(numGioc).fill(null) };\r\n        }\r\n\r\n        setMyTournament(Array(end).fill(null).map((el, i) => {\r\n            if (tipo === 'small') {\r\n                if (i === 0) {\r\n                    return addBattle(tempBattles, i);\r\n                } else if (i > 0 && i <= 3) {\r\n                    return addTrack(tempTracks, i);\r\n                } else if (i > 3 && i <= 3 + numPref) {\r\n                    return addPref(randomPref, i);\r\n                } else {\r\n                    setSwitchTracks(tempTracks);\r\n                    return addBattle(tempBattles, i);\r\n                }\r\n            } else if (tipo === 'medium') {\r\n                if (i === 0) {\r\n                    return addBattle(tempBattles, i);\r\n                } else if (i > 0 && i <= 3) {\r\n                    return addTrack(tempTracks, i);\r\n                } else if (numPref === 2 || numPref === 3) {\r\n                    if (i === 4) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 5) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 5 && i <= 8) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i > 8 && i <= (8 + (numPref - 1))) {\r\n                        return addPref(randomPref, i);\r\n                    } else {\r\n                        setSwitchTracks(tempTracks);\r\n                        return addBattle(tempBattles, i);\r\n                    }\r\n                } else if (numGioc === 4) {\r\n                    if (i > 3 && i <= 5) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 6) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 6 && i <= 9) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i > 9 && i <= (9 + (numPref - 2))) {\r\n                        return addPref(randomPref, i);\r\n                    } else {\r\n                        setSwitchTracks(tempTracks);\r\n                        return addBattle(tempBattles, i);\r\n                    }\r\n                }\r\n            } else {\r\n                //tipo big\r\n                if (i === 0) {\r\n                    return addBattle(tempBattles, i);\r\n                } else if (i > 0 && i <= 3) {\r\n                    return addTrack(tempTracks, i);\r\n                } else if (numPref === 3 || numPref === 4) {\r\n                    if (i === 4) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 5) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 5 && i <= 8) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i === 9) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 10) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 10 && i <= 13) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i > 13 && i <= (13 + (numPref - 2))) {\r\n                        return addPref(randomPref, i);\r\n                    } else {\r\n                        setSwitchTracks(tempTracks);\r\n                        return addBattle(tempBattles, i);\r\n                    }\r\n                } else {\r\n                    if (i === 4) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 4 && i <= 7) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i === 8) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 9) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 9 && i <= 12) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i === 13) {\r\n                        return addPref(randomPref, i);\r\n                    } else {\r\n                        setSwitchTracks(tempTracks);\r\n                        return addBattle(tempBattles, i);\r\n                    }\r\n                }\r\n            };\r\n            return null;\r\n        }));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!endGame && <GameHelps names={players.map((pl) => pl.name)} numGioc={numGioc} tipo={tipo} switchTracks={switchTracks} setSwitchTracks={setSwitchTracks} myTournament={myTournament} setMyTournament={setMyTournament} currentGameId={currentGameId}></GameHelps>}\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-6\">\r\n                    {myTournament && (\r\n                        <div className=\"playlist\">\r\n                            <ul className=\"p-2\">\r\n                                {myTournament.map((el, i) => <li className={\"mytext \" + el.type + \" \" + el.state + ((currentGameId === i) ? ' current' : '')} key={'tm-' + i}>{el.index + \". \" + el.name}\r\n                                    <p>{\"(\" + el.num + \") - \" + ((el.type === 'battle') ? 'BATTAGLIA' : ((el.type === 'favorite') ? 'PREFERITA' : 'GARA'))}</p>\r\n                                {(el.points[0]) && <><p>{players.map((p,indp) => \" \"+p.name.slice(0,3)+\" \"+el.points[indp])} {!endGame && <FontAwesomeIcon className=\"my-icon\" onClick={()=>{modificaPunteggi(i)}} icon={faPencilAlt}/>}</p></>} </li>) }\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <PointsManager openModalTempoPoints={openModalTempoPoints} end={end} players={players} setPlayers={setPlayers} myTournament={myTournament} setMyTournament={setMyTournament} currentGameId={currentGameId} setCurrentGameId={setCurrentGameId} endGame={endGame} setEndGame={setEndGame}></PointsManager>\r\n                </div>\r\n            </div>\r\n            <MyModal clicksModal={clicksModal} text={textModal} title={((end===currentGameId) ? \"Punteggi finali\" : \"Punteggi parziali\")}></MyModal>\r\n            <MyModal2 title=\"Modifica Punti\" myTournament={myTournament ? myTournament : []} setMyTournament={setMyTournament} pointsChangeId={pointsChangeId} players={players} setPlayers={setPlayers} clicksModal2={clicksModal2}></MyModal2>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function AudioPlayer() {\r\n    return (\r\n        <div>\r\n            <audio src=\"./audio/theme.mp3\" autoPlay loop/>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\nimport InitForm from './Components/InitForm';\nimport InitForm2 from './Components/InitForm2';\nimport MyTournament from './Components/MyTournament';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport nitroFueled from './nitrofueled.json';\nimport AudioPlayer from './Components/AudioPlayer';\n\nfunction App() {\n  const [initForm, setInitForm] = useState(true);\n  const [initForm2, setInitForm2] = useState(true);\n  const [numGioc, setNumGioc] = useState(-1);\n  const [tipo, setTipo] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [audio, setAudio] = useState(false);\n\n  return (\n    <>\n      <div id=\"divModale\" />\n      <div className=\"container mt-3\">\n        {audio && <AudioPlayer />}\n        {(initForm || !initForm2) && (<button onClick={() => setAudio((prevAudio) => !prevAudio)} className={\"btn btn-sm \" + (audio ? \"btn-danger\" : \"btn-success\")}>{audio ? \"Audio OFF\" : \"Audio ON\"}</button>)}\n        {initForm && (\n          <InitForm setNumGioc={setNumGioc} setTipo={setTipo} setInitForm={setInitForm}></InitForm>\n        )}\n        {(!initForm && initForm2) && (\n          <InitForm2 tracks={nitroFueled.tracks} numGioc={numGioc} setPlayers={setPlayers} setInitForm2={setInitForm2}></InitForm2>\n        )}\n        {!initForm2 && (\n          <>\n            <MyTournament tipo={tipo} numGioc={numGioc} battles={nitroFueled.battles} tracks={nitroFueled.tracks} setPlayers={setPlayers} players={players}></MyTournament>\n          </>\n        )}\n      </div >\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}